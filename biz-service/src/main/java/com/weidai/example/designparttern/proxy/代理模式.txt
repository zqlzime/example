1）代理模式：为一个对象提供一个替身，以控制对这个对象的访问，及通过代理对象访问目标对象。
这样实现的好处是：可以在目标对象实现的基础上，增强额外的功能操作，及扩展目标对象的功能。
2）被代理的对象可以是远程对象，创建开销大的对象，或者是需要安全控制的对象。
3）代理模式有不同的形式：静态代理、动态代理、cglib代理（可以在内存动态的创建对象，而不需要实现接口）。

动态代理模式：
1）代理对象不需要实现接口，但是目标对象要实现接口，否则不能动态代理。
2）代理对象的生产是利用jdk的API，动态的在内存中构建代理对象
3）动态代理也叫：jdk代理和接口代理

cglib代理模式的介绍:
1）静态代理和jdk代理模式都要求目标对象是实现一个接口，但有时候目标对象只是一个单独
的对象，并没有实现任何的接口，这个时候可以使用目标对象子类来实现代理，这就是cglib代理
2）cglib代理也叫做子类代理，他是在内存中构建一个子类对象，从而实现对目标对象功能扩展。
3）cglib是一个强大的高性能的代码生成包，它可以在运行期扩展java类与实现java接口，
它广泛的被许多AOP的框架使用，利用spring AOP，实现方法拦截。
4）在AOP编程中如何选择代理模式：
1、目标对象需要实现接口，用JDK代理
2、目标对象不需要实现接口，用cglib代理。
5）cglib包的底层是通过使用字节码处理框架ASM来转换字节码并生成新的类。

